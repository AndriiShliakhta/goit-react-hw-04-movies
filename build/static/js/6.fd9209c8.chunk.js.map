{"version":3,"sources":["pages/movieDetailsPage/movieDetailsPage.module.css","pages/movieDetailsPage/MovieDetailsPage.js"],"names":["module","exports","Cast","lazy","Reviews","withRouter","match","history","location","movieSearchWord","useState","movieDetails","setMovieDetails","moviePoster","setMoviePoster","itemDetailsInfo","useEffect","axios","get","params","movieId","then","response","data","poster_path","catch","e","console","log","type","onClick","state","push","mainRoutes","path","className","itemDetails","itemDetailsImage","src","alt","title","name","release_date","slice","first_air_date","vote_average","overview","genres","map","genre","join","to","url","exact","fallback","render","props","id"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,SAAW,mCAAmC,YAAc,sCAAsC,iBAAmB,2CAA2C,gBAAkB,4C,gICO9LC,EAAOC,gBAAK,kBAAM,gCAClBC,EAAUD,gBAAK,kBAAM,gCAkGZE,uBAhGU,SAAC,GAAmD,IAAD,IAAhDC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBACpD,EAAwCC,mBAAS,MAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAuDF,mBAAS,IAAhE,mBAAOG,EAAP,KAAoBC,EAApB,KAAoCC,EAApC,KAmBA,OAjBAC,qBAAU,WACRC,IACGC,IADH,6CAE0CZ,EAAMa,OAAOC,QAFvD,8CAIGC,MAAK,SAAAC,GACJA,EAASC,MAAQX,EAAgBU,EAASC,MAC1CD,EAASC,KAAKC,aACZV,EAAe,kCAAD,OACsBQ,EAASC,KAAKC,iBAGrDC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAEf,CAACpB,EAAMa,OAAOC,QAASN,IAGxB,mCACGH,GACC,qCACE,wBACEkB,KAAK,SACLC,QAAS,WACP,OAAKtB,EAASuB,OAAUtB,EAIfF,EAAQyB,KAAR,wBAA8BvB,KAHrCA,EAAkB,KACXF,EAAQyB,KAAR,UAAgBC,IAAW,GAAGC,SAL3C,kCAaA,sBAAKC,UAAWC,cAAhB,UACE,qBAAKD,UAAWE,mBAAhB,SACE,qBAAKC,IAAKzB,EAAa0B,IAAI,aAG7B,sBAAKJ,UAAWpB,EAAhB,UACE,+BACGJ,EAAa6B,OAAS7B,EAAa8B,KAAM,IAD5C,YAGI,UAAA9B,EAAa+B,oBAAb,eAA2BC,MAAM,EAAG,MAApC,UACAhC,EAAaiC,sBADb,aACA,EAA6BD,MAAM,EAAG,IAJ1C,QAOA,kDAA+C,GAA5BhC,EAAakC,aAAhC,OACA,2CACA,4BAAIlC,EAAamC,WACjB,wCACA,4BAAInC,EAAaoC,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMR,QAAMS,KAAK,cAG1D,gCACE,yDACA,+BACE,6BACE,cAAC,IAAD,CAASC,GAAE,UAAK7C,EAAM8C,IAAX,SAAuBC,OAAK,EAAvC,oBAIF,6BACE,cAAC,IAAD,CAASF,GAAE,UAAK7C,EAAM8C,IAAX,YAA0BC,OAAK,EAA1C,0BAKJ,uBACA,eAAC,WAAD,CAAUC,SAAU,4CAApB,UACE,cAAC,IAAD,CACEpB,KAAI,UAAK5B,EAAM8C,IAAX,SACJC,OAAK,EACLE,OAAQ,SAAAC,GAAK,OAAI,cAACtD,EAAD,2BAAUsD,GAAV,IAAiBC,GAAInD,EAAMa,OAAOC,aAHrD,UAIUd,EAAM8C,IAJhB,UAMA,cAAC,IAAD,CACElB,KAAI,UAAK5B,EAAM8C,IAAX,YACJC,OAAK,EACLE,OAAQ,SAAAC,GAAK,OACX,cAACpD,EAAD,2BAAaoD,GAAb,IAAoBC,GAAInD,EAAMa,OAAOC,aAJzC,UAMUd,EAAM8C,IANhB","file":"static/js/6.fd9209c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"castList\":\"movieDetailsPage_castList__3LqA8\",\"itemDetails\":\"movieDetailsPage_itemDetails__teWop\",\"itemDetailsImage\":\"movieDetailsPage_itemDetailsImage__1mFDo\",\"itemDetailsInfo\":\"movieDetailsPage_itemDetailsInfo__198O2\"};","import axios from 'axios';\r\nimport React, { lazy, Suspense } from 'react';\r\nimport { NavLink, withRouter, Route } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react/cjs/react.development';\r\n// import Cast from './Cast/Cast';\r\n// import Reviews from './Reviews';\r\nimport { mainRoutes } from '../../routes/mainRoutes';\r\nimport { itemDetails, itemDetailsImage } from './movieDetailsPage.module.css';\r\nconst Cast = lazy(() => import('./Cast/Cast'));\r\nconst Reviews = lazy(() => import('./Reviews'));\r\n\r\nconst MovieDetailsPage = ({ match, history, location, movieSearchWord }) => {\r\n  const [movieDetails, setMovieDetails] = useState(null);\r\n  const [moviePoster, setMoviePoster, itemDetailsInfo] = useState('');\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://api.themoviedb.org/3/movie/${match.params.movieId}?api_key=9f076a639a51530d619fabd99f65fd8f`,\r\n      )\r\n      .then(response => {\r\n        response.data && setMovieDetails(response.data);\r\n        response.data.poster_path &&\r\n          setMoviePoster(\r\n            `https://image.tmdb.org/t/p/w500${response.data.poster_path}`,\r\n          );\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }, [match.params.movieId, setMoviePoster]);\r\n\r\n  return (\r\n    <>\r\n      {movieDetails && (\r\n        <>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              if (!location.state && !movieSearchWord) {\r\n                movieSearchWord = null;\r\n                return history.push(`${mainRoutes[0].path}`);\r\n              } else {\r\n                return history.push(`/movies?query=${movieSearchWord}`);\r\n              }\r\n            }}\r\n          >\r\n            &#129044; Go back\r\n          </button>\r\n          <div className={itemDetails}>\r\n            <div className={itemDetailsImage}>\r\n              <img src={moviePoster} alt=\"Poster\" />\r\n            </div>\r\n\r\n            <div className={itemDetailsInfo}>\r\n              <h2>\r\n                {movieDetails.title || movieDetails.name}{' '}\r\n                {`(${\r\n                  movieDetails.release_date?.slice(0, 4) ||\r\n                  movieDetails.first_air_date?.slice(0, 4)\r\n                })`}\r\n              </h2>\r\n              <p>{`User Score: ${movieDetails.vote_average * 10}%`}</p>\r\n              <h3>{`Overview `}</h3>\r\n              <p>{movieDetails.overview}</p>\r\n              <h4>Genres</h4>\r\n              <p>{movieDetails.genres.map(genre => genre.name).join(', ')}</p>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h4>Additional informationn</h4>\r\n            <ul>\r\n              <li>\r\n                <NavLink to={`${match.url}/cast`} exact>\r\n                  Cast\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to={`${match.url}/reviews`} exact>\r\n                  Reviews\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n            <hr />\r\n            <Suspense fallback={<h2>Loading...</h2>}>\r\n              <Route\r\n                path={`${match.url}/cast`}\r\n                exact\r\n                render={props => <Cast {...props} id={match.params.movieId} />}\r\n                key={`${match.url}/cast`}\r\n              />\r\n              <Route\r\n                path={`${match.url}/reviews`}\r\n                exact\r\n                render={props => (\r\n                  <Reviews {...props} id={match.params.movieId} />\r\n                )}\r\n                key={`${match.url}/reviews`}\r\n              />\r\n            </Suspense>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(MovieDetailsPage);\r\n"],"sourceRoot":""}